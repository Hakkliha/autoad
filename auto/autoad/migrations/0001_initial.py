# Generated by Django 3.0.4 on 2020-03-24 09:33

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pictures', models.ImageField(blank=True, upload_to='image_files')),
                ('vehicle_type', models.CharField(blank=True, choices=[('Car', 'Car')], max_length=60)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=8)),
                ('value_added_tax', models.BooleanField(blank=True)),
                ('new_used', models.CharField(blank=True, choices=[('Used', 'Used'), ('New', 'New')], max_length=60)),
                ('warranty_until', models.DateField(blank=True, null=True)),
                ('insurance_until', models.DateField(blank=True, null=True)),
                ('valid_mot_until', models.DateField(blank=True, null=True)),
                ('service_history_bk', models.BooleanField(blank=True, default=False)),
                ('accident', models.BooleanField(blank=True, default=False)),
                ('damaged', models.BooleanField(blank=True, default=False)),
                ('vehicle_model_year', models.IntegerField(choices=[(1884, 1884), (1885, 1885), (1886, 1886), (1887, 1887), (1888, 1888), (1889, 1889), (1890, 1890), (1891, 1891), (1892, 1892), (1893, 1893), (1894, 1894), (1895, 1895), (1896, 1896), (1897, 1897), (1898, 1898), (1899, 1899), (1900, 1900), (1901, 1901), (1902, 1902), (1903, 1903), (1904, 1904), (1905, 1905), (1906, 1906), (1907, 1907), (1908, 1908), (1909, 1909), (1910, 1910), (1911, 1911), (1912, 1912), (1913, 1913), (1914, 1914), (1915, 1915), (1916, 1916), (1917, 1917), (1918, 1918), (1919, 1919), (1920, 1920), (1921, 1921), (1922, 1922), (1923, 1923), (1924, 1924), (1925, 1925), (1926, 1926), (1927, 1927), (1928, 1928), (1929, 1929), (1930, 1930), (1931, 1931), (1932, 1932), (1933, 1933), (1934, 1934), (1935, 1935), (1936, 1936), (1937, 1937), (1938, 1938), (1939, 1939), (1940, 1940), (1941, 1941), (1942, 1942), (1943, 1943), (1944, 1944), (1945, 1945), (1946, 1946), (1947, 1947), (1948, 1948), (1949, 1949), (1950, 1950), (1951, 1951), (1952, 1952), (1953, 1953), (1954, 1954), (1955, 1955), (1956, 1956), (1957, 1957), (1958, 1958), (1959, 1959), (1960, 1960), (1961, 1961), (1962, 1962), (1963, 1963), (1964, 1964), (1965, 1965), (1966, 1966), (1967, 1967), (1968, 1968), (1969, 1969), (1970, 1970), (1971, 1971), (1972, 1972), (1973, 1973), (1974, 1974), (1975, 1975), (1976, 1976), (1977, 1977), (1978, 1978), (1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021)], default=2020)),
                ('brand', models.CharField(blank=True, choices=[('Abarth', 'Abarth'), ('AC', 'AC'), ('Acura', 'Acura'), ('Aixam', 'Aixam'), ('Alfa Romeo', 'Alfa Romeo'), ('ALPINA', 'ALPINA'), ('Atega', 'Atega'), ('Asia Motors', 'Asia Motors'), ('Aston Martin', 'Aston Martin'), ('Audi', 'Audi'), ('Austin', 'Austin'), ('Austin Healey', 'Austin Healey'), ('Bentley', 'Bentley'), ('BMW', 'BMW'), ('Borgward', 'Borgward'), ('Brilliance', 'Brilliance'), ('Bugatti', 'Bugatti'), ('Buick', 'Buick'), ('Cadillac', 'Cadillac'), ('Casalini', 'Casalini'), ('Caterham', 'Caterham'), ('Chatenet', 'Chatenet'), ('Chevrolet', 'Chevrolet'), ('Chrysler', 'Chrysler'), ('Citroen', 'CitroÃ«n'), ('Cobra', 'Cobra'), ('Corvette', 'Corvette'), ('Cupra', 'Cupra'), ('Dacia', 'Dacia'), ('Daewoo', 'Daewoo'), ('Daihatsu', 'Daihatsu'), ('DeTomaso', 'DeTomaso'), ('Dodge', 'Dodge'), ('Donkervoort', 'Donkervoort'), ('DS Automobiles', 'DS Automobiles'), ('Ferrari', 'Ferrari'), ('Fiat', 'Fiat'), ('Fisker', 'Fisker'), ('Ford', 'Ford'), ('GM', 'GM'), ('GAC Gonow', 'GAC Gonow'), ('Gemballa', 'Gemballa'), ('GMC', 'GMC'), ('Grecav', 'Grecav'), ('Hamann', 'Hamann'), ('Holden', 'Holden'), ('Honda', 'Honda'), ('Hummer', 'Hummer'), ('Hyundai', 'Hyundai'), ('Infiniti', 'Infiniti'), ('Isuzu', 'Isuzu'), ('Iveco', 'Iveco'), ('Jaguar', 'Jaguar'), ('Jeep', 'Jeep'), ('Kia', 'Kia'), ('Koenigsegg', 'Koenigsegg'), ('KTM', 'KTM'), ('Lada', 'Lada'), ('Lamborghini', 'Lamborghini'), ('Lancia', 'Lancia'), ('Land Rover', 'Land Rover'), ('Landwind', 'Landwind'), ('Lexus', 'Lexus'), ('Ligier', 'Ligier'), ('Lincoln', 'Lincoln'), ('Lotus', 'Lotus'), ('Mahindra', 'Mahindra'), ('Maserati', 'Maserati'), ('Maybach', 'Maybach'), ('Mazda', 'Mazda'), ('McLaren', 'McLaren'), ('Mercedes-Benz', 'Mercedes-Benz'), ('MG', 'MG'), ('Microcar', 'Microcar'), ('MINI', 'MINI'), ('Mitsubishi', 'Mitsubishi'), ('Morgan', 'Morgan'), ('Nissan', 'Nissan'), ('NSU', 'NSU'), ('Oldsmobile', 'Oldsmobile'), ('Opel', 'Opel'), ('Pagani', 'Pagani'), ('Peugeot', 'Peugeot'), ('Piaggio', 'Piaggio'), ('Plymouth', 'Plymouth'), ('Polestar', 'Polestar'), ('Pontiac', 'Pontiac'), ('Porsche', 'Porsche'), ('Proton', 'Proton'), ('Renault', 'Renault'), ('Rolls-Royce', 'Rolls-Royce'), ('Rover', 'Rover'), ('Ruf', 'Ruf'), ('Saab', 'Saab'), ('Santana', 'Santana'), ('Seat', 'Seat'), ('Skoda', 'Skoda'), ('Smart', 'Smart'), ('speedART', 'speedART'), ('Spyker', 'Spyker'), ('Ssangyong', 'Ssangyong'), ('Subaru', 'Subaru'), ('Suzuki', 'Suzuki'), ('Talbot', 'Talbot'), ('Tata', 'Tata'), ('TECHART', 'TECHART'), ('Tesla', 'Tesla'), ('Toyota', 'Toyota'), ('Trabant', 'Trabant'), ('Triumph', 'Triumph'), ('TVR', 'TVR'), ('Volkswagen', 'Volkswagen'), ('Volvo', 'Volvo'), ('Wartburg', 'Wartburg'), ('Westfield', 'Westfield'), ('Wiesmann', 'Wiesmann'), ('Other', 'Other')], max_length=60)),
                ('vehicle_model', models.CharField(blank=True, max_length=60)),
                ('vehicle_model_other', models.CharField(blank=True, max_length=60)),
                ('body_type', models.CharField(blank=True, choices=[('Saloon', 'Saloon'), ('Cabriolet / Roadster', 'Cabriolet / Roadster'), ('Estate Car', 'Estate Car'), ('Small Car', 'Small Car'), ('Sports Car / Coupe', 'Sports Car / Coupe'), ('SUV / Off-road Vehicle / Pickup Truck', 'SUV / Off-road Vehicle / Pickup Truck'), ('Van / Minibus', 'Van / Minibus'), ('Other', 'Other')], max_length=60)),
                ('power_kw', models.PositiveIntegerField(blank=True, default=1)),
                ('displacement_cm', models.PositiveIntegerField(blank=True, default=1)),
                ('cylinders', models.PositiveIntegerField(blank=True, default=1, null=True)),
                ('fuel', models.CharField(blank=True, choices=[('Petrol', 'Petrol'), ('Diesel', 'Diesel'), ('Electric', 'Electric'), ('Ethanol', 'Ethanol'), ('Hydrib (petrol/electric)', 'Hydrib (petrol/electric)'), ('Hydrib (diesel/electric)', 'Hydrib (diesel/electric)'), ('LPG', 'LPG'), ('Natural Gas', 'Natural Gas'), ('Hydrogen', 'Hydrogen'), ('Other', 'Other')], max_length=60)),
                ('fuel_tank_l', models.DecimalField(blank=True, decimal_places=1, default='', max_digits=5, null=True)),
                ('fuel_usage_city', models.DecimalField(blank=True, decimal_places=1, default='', max_digits=5, null=True)),
                ('fuel_usage_out', models.DecimalField(blank=True, decimal_places=1, default='', max_digits=5, null=True)),
                ('fuel_usage_average', models.DecimalField(blank=True, decimal_places=1, default='', max_digits=5, null=True)),
                ('mileage_km', models.DecimalField(blank=True, decimal_places=1, default='', max_digits=8, null=True)),
                ('transmission', models.CharField(blank=True, choices=[('Automatic', 'Automatic'), ('Semi-Automatic', 'Semi-Automatic'), ('Manual', 'Manual')], max_length=60)),
                ('drive', models.CharField(blank=True, choices=[('FWD', 'FWD'), ('RWD', 'RWD'), ('AWD', 'AWD')], max_length=60)),
                ('doors', models.PositiveIntegerField(blank=True, default=2, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('seats', models.PositiveIntegerField(blank=True, default=4, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('equipment', models.TextField(blank=True, null=True)),
                ('steeringwheel', models.CharField(blank=True, choices=[('Left', 'Left'), ('Right', 'Right'), ('Center', 'Center')], max_length=10)),
                ('location', models.CharField(blank=True, max_length=140)),
                ('country_of_origin', models.CharField(blank=True, choices=[('Afghanistan', 'Afghanistan'), ('Albania', 'Albania'), ('Algeria', 'Algeria'), ('Andorra', 'Andorra'), ('Angola', 'Angola'), ('Antigua & Deps', 'Antigua & Deps'), ('Argentina', 'Argentina'), ('Armenia', 'Armenia'), ('Australia', 'Australia'), ('Austria', 'Austria'), ('Azerbaijan', 'Azerbaijan'), ('Bahamas', 'Bahamas'), ('Bahrain', 'Bahrain'), ('Bangladesh', 'Bangladesh'), ('Barbados', 'Barbados'), ('Belarus', 'Belarus'), ('Belgium', 'Belgium'), ('Belize', 'Belize'), ('Benin', 'Benin'), ('Bhutan', 'Bhutan'), ('Bolivia', 'Bolivia'), ('Bosnia Herzegovina', 'Bosnia Herzegovina'), ('Botswana', 'Botswana'), ('Brazil', 'Brazil'), ('Brunei', 'Brunei'), ('Bulgaria', 'Bulgaria'), ('Burkina', 'Burkina'), ('Burundi', 'Burundi'), ('Cambodia', 'Cambodia'), ('Cameroon', 'Cameroon'), ('Canada', 'Canada'), ('Cape Verde', 'Cape Verde'), ('Central African Republic', 'Central African Republic'), ('Chad', 'Chad'), ('Chile', 'Chile'), ('China', 'China'), ('Colombia', 'Colombia'), ('Comoros', 'Comoros'), ('Congo', 'Congo'), ('Congo Democratic Republic', 'Congo Democratic Republic'), ('Costa Rica', 'Costa Rica'), ('Croatia', 'Croatia'), ('Cuba', 'Cuba'), ('Cyprus', 'Cyprus'), ('Czech Republic', 'Czech Republic'), ('Denmark', 'Denmark'), ('Djibouti', 'Djibouti'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('East Timor', 'East Timor'), ('Ecuador', 'Ecuador'), ('Egypt', 'Egypt'), ('El Salvador', 'El Salvador'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Estonia', 'Estonia'), ('Ethiopia', 'Ethiopia'), ('Fiji', 'Fiji'), ('Finland', 'Finland'), ('France', 'France'), ('Gabon', 'Gabon'), ('Gambia', 'Gambia'), ('Georgia', 'Georgia'), ('Germany', 'Germany'), ('Ghana', 'Ghana'), ('Greece', 'Greece'), ('Grenada', 'Grenada'), ('Guatemala', 'Guatemala'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Haiti', 'Haiti'), ('Honduras', 'Honduras'), ('Hungary', 'Hungary'), ('Iceland', 'Iceland'), ('India', 'India'), ('Indonesia', 'Indonesia'), ('Iran', 'Iran'), ('Iraq', 'Iraq'), ('Repuclic of Ireland', 'Republic of Ireland'), ('Israel', 'Israel'), ('Italy', 'Italy'), ('Ivory Coast', 'Ivory Coast'), ('Jamaica', 'Jamaica'), ('Japan', 'Japan'), ('Jordan', 'Jordan'), ('Kazakhstan', 'Kazakhstan'), ('Kenya', 'Kenya'), ('Kiribati', 'Kiribati'), ('Korea North', 'Korea North'), ('Korea South', 'Korea South'), ('Kosovo', 'Kosovo'), ('Kuwait', 'Kuwait'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Laos', 'Laos'), ('Latvia', 'Latvia'), ('Lebanon', 'Lebanon'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Liechtenstein', 'Liechtenstein'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Macedonia', 'Macedonia'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Malaysia', 'Malaysia'), ('Maldives', 'Maldives'), ('Mali', 'Mali'), ('Malta', 'Malta'), ('Marshall Islands', 'Marshall Islands'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mexico', 'Mexico'), ('Micronesia', 'Micronesia'), ('Moldova', 'Moldova'), ('Monaco', 'Monaco'), ('Mongolia', 'Mongolia'), ('Montenegro', 'Montenegro'), ('Morocco', 'Morocco'), ('Mozambique', 'Mozambique'), ('Myanmar', 'Myanmar/Burma'), ('Namibia', 'Namibia'), ('Nauru', 'Nauru'), ('Nepal', 'Nepal'), ('Netherlands', 'Netherlands'), ('New Zealand', 'New Zealand'), ('Nicaragua', 'Nicaragua'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('Norway', 'Norway'), ('Oman', 'Oman'), ('Pakistan', 'Pakistan'), ('Palau', 'Palau'), ('Panama', 'Panama'), ('Papua New Guinea', 'Papua New Guinea'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Philippines', 'Philippines'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('Qatar', 'Qatar'), ('Romania', 'Romania'), ('Russian Federation', 'Russian Federation'), ('Rwanda', 'Rwanda'), ('St Kitts & Nevis', 'St Kitts & Nevis'), ('St Lucia', 'St Lucia'), ('Saint Vincent & the Grenadines', 'Saint Vincent & the Grenadines'), ('Samoa', 'Samoa'), ('San Marino', 'San Marino'), ('Sao Tome & Principe', 'Sao Tome & Principe'), ('Saudi Arabia', 'Saudi Arabia'), ('Senegal', 'Senegal'), ('Serbia', 'Serbia'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Singapore', 'Singapore'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Solomon Islands', 'Solomon Islands'), ('Somalia', 'Somalia'), ('South Africa', 'South Africa'), ('South Sudan', 'South Sudan'), ('Spain', 'Spain'), ('Sri Lanka', 'Sri Lanka'), ('Sudan', 'Sudan'), ('Suriname', 'Suriname'), ('Swaziland', 'Swaziland'), ('Sweden', 'Sweden'), ('Switzerland', 'Switzerland'), ('Syria', 'Syria'), ('Taiwan', 'Taiwan'), ('Tajikistan', 'Tajikistan'), ('Tanzania', 'Tanzania'), ('Thailand', 'Thailand'), ('Togo', 'Togo'), ('Tonga', 'Tonga'), ('Trinidad & Tobago', 'Trinidad & Tobago'), ('Tunisia', 'Tunisia'), ('Turkey', 'Turkey'), ('Turkmenistan', 'Turkmenistan'), ('Tuvalu', 'Tuvalu'), ('Uganda', 'Uganda'), ('Ukraine', 'Ukraine'), ('United Arab Emirates', 'United Arab Emirates'), ('United Kingdom', 'United Kingdom'), ('United States', 'United States'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vanuatu', 'Vanuatu'), ('Vatican City', 'Vatican City'), ('Venezuela', 'Venezuela'), ('Vietnam', 'Vietnam'), ('Yemen', 'Yemen'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe')], max_length=140)),
                ('date_of_import', models.DateField(blank=True)),
                ('is_import', models.BooleanField(blank=True, default=False)),
                ('nr_owner', models.PositiveIntegerField(blank=True, default=2, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('customisation', models.BooleanField(blank=True, default=False)),
                ('customisation_desc', models.TextField(blank=True, null=True)),
                ('vin_code', models.CharField(blank=True, max_length=50)),
                ('numberplate', models.CharField(blank=True, max_length=20)),
                ('optical_condition', models.CharField(blank=True, choices=[('Flawless', 'Flawless'), ('Minor scratches', 'Minor flaws'), ('Noticeable scratches', 'Noticeable flaws'), ('Hazy', 'Paint is hazy or discolored'), ('Minor Rust', 'Minimal Rust'), ('Noticeable Rust', 'Noticeable Rust'), ('Major Rust', 'Major Rust'), ('Restoration', 'Needs full restoration'), ('Other', 'Other')], max_length=1400)),
                ('technical_condition', models.CharField(blank=True, choices=[('Flawless', 'Flawless'), ('Drivertrain', 'Drivetrain issues'), ('Suspension', 'Suspension issues'), ('Minor', 'Minor issues'), ('Not Driveable', 'Not Driveable'), ('Other', 'Other')], max_length=1400)),
                ('interior_condition', models.CharField(blank=True, choices=[('Flawless', 'Flawless'), ('Worn', 'Worn'), ('Moldy', 'Moldy'), ('Stains', 'Stains'), ('Other', 'Other')], max_length=1400)),
                ('last_service_date', models.DateField(blank=True)),
                ('last_service_desc', models.TextField(blank=True, null=True)),
                ('vehicle_desc', models.TextField(blank=True, null=True)),
                ('ad_type', models.CharField(blank=True, choices=[('Sale', 'Sale'), ('Buy', 'Buy'), ('Swap', 'Swap'), ('Sale or Swap', 'Sale or Swap'), ('Buy or Swap', 'Buy or Swap')], max_length=30)),
                ('creation_datetime', models.DateTimeField(auto_now=True)),
                ('promoted', models.DateTimeField(auto_now=True)),
                ('booked_until', models.BooleanField(blank=True, default=False)),
                ('active', models.BooleanField(blank=True, default=True)),
                ('user', models.CharField(blank=True, default='Anonymous', max_length=60)),
            ],
        ),
    ]
